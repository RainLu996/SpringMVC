<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/mvc
       https://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

    <!-- 声明组件扫描器 -->
    <context:component-scan base-package="com.lujun61.controller"/>

    <!-- 配置视图解析器：帮助开发人员完善视图文件的路径 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- 前缀：视图文件的路径 -->
        <property name="prefix" value="/WEB-INF/view/"/>

        <!-- 后缀：视图文件的扩展名 -->
        <property name="suffix" value=".jsp"/>
    </bean>

    <!--
        <mvc:default-servlet-handler/>与@RequestMapping注解有冲突，
        需要加入<mvc:annotation-driven/>解决冲突。
    -->
    <mvc:annotation-driven/>

    <!--
        第二种处理静态资源的方式：
            <mvc:resources> 加入后，框架会创建ResourceHttpRequestHandler这个处理器对象。
            ResourceHttpRequestHandler：处理用户对静态资源访问的请求，而不依赖于tomcat服务器。
            mapping：访问静态资源的uri地址，使用通配符 “**”
            location：静态资源在项目中的目录位置。不可以使用通配符！！！
     -->
    <mvc:resources mapping="/static/**" location="/static/"/>
</beans>
















